#ifndef N
#define N

#include <string>

using namespace std;

struct Note{
private:
    char name; // Имя ноты
    int octave; // Октава ноты. Отсчитывается от ля субконтроктавы
    int luckySygn; // Случайный знак (используется при хроматизме)
    int mainSygn; // Основной знак ноты. Задается тональностью, в ручную или конструктором

public:
//-----------------------------------------

    Note();

/* Значения ноты по умолчанию:
name - 'a'
sygn - 0
octave - 5
*/

//-----------------------------------------

    char name(); // возвращает имя
    void setName(char); // изменяет имя

//-----------------------------------------

    int octave(); // возвращает октаву
    void setOctave(int); // изменяет октаву

//-----------------------------------------
 
    int luckySygn(); // возвращает случайный знак   
    void setLuckySygn(int); // изменяет случайный знак

//-----------------------------------------

    int mainSygn(); // возвращает основной знак
    void setMainSygn(int); // изменяет основной знак

///////////////////////////////////////////

    void enharmonyChange(bool); 

/* 0 - нисходящая замена, 1 - восходящая. 
Пример: 
Note n; // {'a', 0, 5}
n.enharmonyChange(1);
cout << n.name; // beses
*/

//-----------------------------------------

    int getHeight(); 

/* Высота относительно ля суб контр октавы.
Пример:
Note n; // {'a', 0, 1}
Note t = {a, 0, 2};
cout << n.getHeight(); // 0
cout << t.getHeight() // 14
*/

//-----------------------------------------

    string getName(); 

/* Возвращает имя в буквенной форме.
Пример:
Note n = {'a', -1, 5}
cout << n.getName(); // as
*/

//-----------------------------------------
    
    void change(string); 
    
/* Изменяет ноту по буквенному обозначению.
Пример: 
Note n;
n.change("fis"); // n == {'f', 1, 5}
*/

//------------------------------------------

    int resolution(string, bool); 

/* Разрешает ноту в ближайшую устойчивую ноту указанной тональности вниз или вверх.
Пример:
Note n; // n == {'a', 0, 5};
n.resolution('C', 0); // n == {'g', 0, 4}
n.resolution('As', 1); // n == {'a', -1, 5}
*/

};

#endif
